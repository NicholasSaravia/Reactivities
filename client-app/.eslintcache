[{"C:\\Users\\nicks\\Reactivities\\client-app\\src\\index.tsx":"1","C:\\Users\\nicks\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","C:\\Users\\nicks\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","C:\\Users\\nicks\\Reactivities\\client-app\\src\\features\\nav\\Navbar.tsx":"4","C:\\Users\\nicks\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\Users\\nicks\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\Users\\nicks\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","C:\\Users\\nicks\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8"},{"size":567,"mtime":1610120849892,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1609879298645,"results":"11","hashOfConfig":"10"},{"size":2186,"mtime":1610139984392,"results":"12","hashOfConfig":"10"},{"size":627,"mtime":1610132723062,"results":"13","hashOfConfig":"10"},{"size":1676,"mtime":1610139967430,"results":"14","hashOfConfig":"10"},{"size":1364,"mtime":1610139967475,"results":"15","hashOfConfig":"10"},{"size":1180,"mtime":1610139967426,"results":"16","hashOfConfig":"10"},{"size":2494,"mtime":1610139967430,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u5e1zp",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},"C:\\Users\\nicks\\Reactivities\\client-app\\src\\index.tsx",[],"C:\\Users\\nicks\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],["38","39"],"C:\\Users\\nicks\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\Users\\nicks\\Reactivities\\client-app\\src\\features\\nav\\Navbar.tsx",[],"C:\\Users\\nicks\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["40","41"],"C:\\Users\\nicks\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",["42"],"import React from \"react\";\r\nimport { Button, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\n\r\ninterface IProps {\r\n\tactivities: IActivity[];\r\n\tselectActivity: (id: string) => void;\r\n\tdeleteActivity: (id: string) => void;\r\n}\r\n\r\nexport const ActivityList: React.FC<IProps> = ({ activities, selectActivity, deleteActivity }) => {\r\n\treturn (\r\n\t\t<Segment clearing>\r\n\t\t\t<Item.Group divided>\r\n\t\t\t\t{activities.map((activity) => (\r\n\t\t\t\t\t<Item key={activity.id}>\r\n\t\t\t\t\t\t<Item.Content>\r\n\t\t\t\t\t\t\t<Item.Header as=\"a\">\r\n\t\t\t\t\t\t\t\t{activity.title}\r\n\t\t\t\t\t\t\t</Item.Header>\r\n\t\t\t\t\t\t\t<Item.Meta>{activity.date}</Item.Meta>\r\n\t\t\t\t\t\t\t<Item.Description>\r\n\t\t\t\t\t\t\t\t<div>{activity.description}</div>\r\n\t\t\t\t\t\t\t\t<div>{activity.city}, {activity.venue}</div>\r\n\t\t\t\t\t\t\t</Item.Description>\r\n\t\t\t\t\t\t\t<Item.Extra>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\t\t\t\t\tcontent=\"view\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"blue\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => selectActivity(activity.id)}\r\n\t\t\t\t\t\t\t\t></Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\t\t\t\t\tcontent=\"delete\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => deleteActivity(activity.id)}\r\n\t\t\t\t\t\t\t\t></Button>\r\n\t\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\t\t\tcontent={activity.category}\r\n\t\t\t\t\t\t\t\t></Label>\r\n\t\t\t\t\t\t\t</Item.Extra>\r\n\t\t\t\t\t\t</Item.Content>\r\n\t\t\t\t\t</Item>\r\n\t\t\t\t))}\r\n\t\t\t</Item.Group>\r\n\t\t</Segment>\r\n\t);\r\n};\r\n","C:\\Users\\nicks\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",["43"],"import React from \"react\";\r\nimport { Button, Card, Image } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\n\r\ninterface IProps {\r\n\tactivity: IActivity;\r\n\tsetEditMode: (editMode: boolean) => void;\r\n\tsetSelectedActivity: (activity: IActivity | null) => void;\r\n}\r\n\r\nexport const ActivityDetails: React.FC<IProps> = ({\r\n\tactivity,\r\n\tsetEditMode,\r\n\tsetSelectedActivity\r\n}) => {\r\n\treturn (\r\n\t\t<Card fluid>\r\n\t\t\t<Image\r\n\t\t\t\tsrc={`/assets/categoryImages/${activity.category}.jpg`}\r\n\t\t\t\twrapped\r\n\t\t\t\tui={false}\r\n\t\t\t/>\r\n\t\t\t<Card.Content>\r\n\t\t\t\t<Card.Header>{activity.title}</Card.Header>\r\n\t\t\t\t<Card.Meta>\r\n\t\t\t\t\t<span className=\"date\">{activity.date}</span>\r\n\t\t\t\t</Card.Meta>\r\n\t\t\t\t<Card.Description>\r\n\t\t\t\t\t{activity.description}\r\n\t\t\t\t</Card.Description>\r\n\t\t\t</Card.Content>\r\n\t\t\t<Card.Content extra>\r\n\t\t\t\t<Button.Group widths={2}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => setEditMode(true)}\r\n\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\tcolor=\"blue\"\r\n\t\t\t\t\t\tcontent=\"edit\"\r\n\t\t\t\t\t></Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => setSelectedActivity(null)}\r\n\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\tcolor=\"grey\"\r\n\t\t\t\t\t\tcontent=\"cancel\"\r\n\t\t\t\t\t></Button>\r\n\t\t\t\t</Button.Group>\r\n\t\t\t</Card.Content>\r\n\t\t</Card>\r\n\t);\r\n};\r\n","C:\\Users\\nicks\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",["44"],"import React, { useState } from \"react\";\r\nimport { Button, Form, Segment } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport {v4 as uuid} from 'uuid';\r\n\r\ninterface IProps {\r\n\tsetEditMode: (editMode: boolean) => void;\r\n\tactivity: IActivity | null;\r\n\tcreateActivity: (activity: IActivity) => void;\r\n\teditActivity: (activity: IActivity) => void;\r\n}\r\n\r\nexport const ActivityForm: React.FC<IProps> = ({\r\n\tsetEditMode,\r\n\tactivity: initialFormState,\r\n\teditActivity,\r\n\tcreateActivity\r\n}) => {\r\n\tconst initializeForm = () => {\r\n\t\tif (initialFormState) {\r\n\t\t\treturn initialFormState;\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tid: \"\",\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\tcategory: \"\",\r\n\t\t\t\tdescription: \"\",\r\n\t\t\t\tcity: \"\",\r\n\t\t\t\tdate: \"\",\r\n\t\t\t\tvenue: \"\",\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tconst [activity, setActivity] = useState<IActivity>(initializeForm);\r\n\tconst handleSubmit = () => {\r\n\t\tif (activity.id.length === 0){\r\n\t\t\tlet newActivity = {\r\n\t\t\t\t...activity,\r\n\t\t\t\tid: uuid()\r\n\t\t\t}\r\n\t\t\tcreateActivity(newActivity);\r\n\t\t}else{\r\n\t\t\teditActivity(activity);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleInputChange = (event: any) => {\r\n\t\tsetActivity({\r\n\t\t\t...activity,\r\n\t\t\t[event.target.name]: event.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Segment clearing>\r\n\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t<Form.Input\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\tplaceholder=\"Title\"\r\n\t\t\t\t\tvalue={activity.title}\r\n\t\t\t\t></Form.Input>\r\n\t\t\t\t<Form.TextArea\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\tplaceholder=\"Description\"\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\trows={2}\r\n\t\t\t\t\tvalue={activity.description}\r\n\t\t\t\t></Form.TextArea>\r\n\t\t\t\t<Form.Input\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\tplaceholder=\"Category\"\r\n\t\t\t\t\tname=\"category\"\r\n\t\t\t\t\tvalue={activity.category}\r\n\t\t\t\t></Form.Input>\r\n\t\t\t\t<Form.Input\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\tplaceholder=\"Date\"\r\n\t\t\t\t\tname=\"date\"\r\n\t\t\t\t\tvalue={activity.date}\r\n\t\t\t\t></Form.Input>\r\n\t\t\t\t<Form.Input\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\tname=\"city\"\r\n\t\t\t\t\tplaceholder=\"City\"\r\n\t\t\t\t\tvalue={activity.city}\r\n\t\t\t\t></Form.Input>\r\n\t\t\t\t<Form.Input\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\tplaceholder=\"Venue\"\r\n\t\t\t\t\tname=\"venue\"\r\n\t\t\t\t\tvalue={activity.venue}\r\n\t\t\t\t></Form.Input>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\tpositive\r\n\t\t\t\t\ttype=\"sumbmit\"\r\n\t\t\t\t\tcontent=\"submit\"\r\n\t\t\t\t></Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tcontent=\"cancel\"\r\n\t\t\t\t\tonClick={() => setEditMode(false)}\r\n\t\t\t\t></Button>\r\n\t\t\t</Form>\r\n\t\t</Segment>\r\n\t);\r\n};\r\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":50,"column":29,"nodeType":"51","messageId":"52","endLine":50,"endColumn":31},{"ruleId":"49","severity":1,"message":"50","line":50,"column":53,"nodeType":"51","messageId":"52","endLine":50,"endColumn":55},{"ruleId":"53","severity":1,"message":"54","line":2,"column":18,"nodeType":"55","messageId":"56","endLine":2,"endColumn":23},{"ruleId":"53","severity":1,"message":"57","line":2,"column":24,"nodeType":"55","messageId":"56","endLine":2,"endColumn":28},{"ruleId":"53","severity":1,"message":"58","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":13},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","@typescript-eslint/no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'act' is defined but never used.","no-global-assign","no-unsafe-negation"]